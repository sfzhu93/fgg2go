package main;
type Any[type ] interface {

};

type t[type a Any[]] interface {
	m[type ](in a) a
};

type Int[type ] struct {

};

type Bool[type ] struct {

};

type Dummy2[type ] struct {

};

type u[type ] struct{};
func (this u[type ]) m[type ](in Int[]) Int[] { return in };


func (this Dummy2[type ]) foo[type ](in t[Int[]]) t[Bool[]]{
	return in.(t[Bool[]])
};

func main(){
	_ = Dummy2[]{}.foo[](u[]{})
}
