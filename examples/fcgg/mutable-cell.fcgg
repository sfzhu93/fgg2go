package main

import (
	"fmt"
)

type Cell[T any] struct {
	loc chan T
}

func (this Cell[T]) RWCell (oldN T) T{
	select {
		case newN := <- this.loc :
			return this.RWCell(newN)
		case this.loc <- oldN :
			return this.RWCell(oldN)
	}
}

func (this Cell[T]) Read() T {
	return <-this.loc
}

func (this Cell[T]) Write(data T) {
	this.loc <- data
}


func Incr(x Cell[int]) {
	val := x.Read()
	x.Write(val + 1)
}

func main() {
	i := Cell[int]{make(chan int)}
	go i.RWCell(0)
	Incr(i)
	fmt.Println(i.Read())
}
